{
  "info": {
    "_postman_id": "1d92db1d-c572-4cdb-8e73-17da4e7ec73a",
    "name": "Explore-With-Me - Feature-tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "24088446"
  },
  "item": [
    {
      "name": "-Добавление категории",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Category_for_feature\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/admin/categories",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Добавление пользователя",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"User Polozov\",\r\n    \"email\": \"User.Polozov17@hotmail.com\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/admin/users",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "- Добавление события",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n     \"title\": \"Magnam quasi dolor placeat sequi.\",\r\n    \"description\": \"Corrupti non perspiciatis magni voluptatem culpa eaque facilis est. Fugit culpa debitis. Praesentium expedita sint in exercitationem nam quibusdam eos excepturi aut. Laudantium ut enim aut.\\n \\rAccusantium rerum et in aliquid sequi accusamus sapiente. Et aut dicta. Doloremque deleniti non quibusdam et. Unde id modi tenetur. Alias commodi eos autem et consequuntur libero quis accusantium aperiam. Sint commodi dolores et doloremque non harum cumque.\\n \\rSunt omnis odit a quod ullam voluptatem ipsa voluptas. Aut quam veniam alias occaecati ratione velit vero. Placeat officiis culpa accusantium deserunt neque tempore repudiandae. Qui voluptatem ut est alias aut dolores ipsam debitis.\",\r\n    \"annotation\": \"Voluptatum sit accusantium similique ullam nam error ut. Hic ipsum eveniet quos rerum repellat libero dolores quisquam est. Eveniet facilis facilis quis. Et voluptatem voluptas. Laudantium quasi ab architecto.\",\r\n    \"category\": \"1\",\r\n    \"eventDate\": \"2024-07-10 22:30:03\",\r\n    \"location\": {\r\n        \"lat\": -38.0794,\r\n        \"lon\": 65.7033\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 941,\r\n    \"publishedOn\": null,\r\n    \"requestModeration\": true\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/users/:userId/events",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Добавление комментария 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "\r",
              "const target = pm.response.json();\r",
              "\r",
              "pm.test(\"Комментарии должны содержать поля: id, text, cteator, event, createTime, updateTime\", function () {\r",
              "\r",
              "pm.expect(target).to.have.property('id');\r",
              "pm.expect(target).to.have.property('text');\r",
              "pm.expect(target).to.have.property('createTime');\r",
              "pm.expect(target).to.have.property('updateTime');\r",
              "pm.expect(target).to.have.property('event');\r",
              "pm.expect(target).to.have.property('creator');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Комментарий 1 к событию\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/comments?creatorId=1&eventId=1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments"
          ],
          "query": [
            {
              "key": "creatorId",
              "value": "1"
            },
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Добавление комментария 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "\r",
              "const target = pm.response.json();\r",
              "\r",
              "pm.test(\"Комментарии должны содержать поля: id, text, cteator, event, createTime, updateTime\", function () {\r",
              "\r",
              "pm.expect(target).to.have.property('id');\r",
              "pm.expect(target).to.have.property('text');\r",
              "pm.expect(target).to.have.property('createTime');\r",
              "pm.expect(target).to.have.property('updateTime');\r",
              "pm.expect(target).to.have.property('event');\r",
              "pm.expect(target).to.have.property('creator');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Комментарий 1 к событию\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/comments?creatorId=1&eventId=1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments"
          ],
          "query": [
            {
              "key": "creatorId",
              "value": "1"
            },
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Добавление комментария 3 - notOk",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Комментарий 1 к событию\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/comments?creatorId=9999&eventId=1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments"
          ],
          "query": [
            {
              "key": "creatorId",
              "value": "9999"
            },
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Обновление комментария 1 - ок",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "\r",
              "const target = pm.response.json();\r",
              "\r",
              "pm.test(\"Комментарии должны содержать поля: id, text, cteator, event, createTime, updateTime\", function () {\r",
              "\r",
              "pm.expect(target).to.have.property('id');\r",
              "pm.expect(target).to.have.property('text');\r",
              "pm.expect(target).to.have.property('createTime');\r",
              "pm.expect(target).to.have.property('updateTime');\r",
              "pm.expect(target).to.have.property('event');\r",
              "pm.expect(target).to.have.property('creator');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Обновленный Комментарий 1 к событию\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/comments/1/user/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments",
            "1",
            "user",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Обновление комментария 1 - nOk",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Неудачно обновленный комментарий 1 к событию\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/comments/9999/user/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments",
            "9999",
            "user",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Пoлучение комментариев по eventId",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "const target = pm.response.json();\r",
              "\r",
              "pm.test(\"Комментарии должны содержать поля: id, text, cteator, event, createTime, updateTime\", function () {\r",
              "\r",
              "pm.expect(target[0]).to.have.property('id');\r",
              "pm.expect(target[0]).to.have.property('text');\r",
              "pm.expect(target[0]).to.have.property('createTime');\r",
              "pm.expect(target[0]).to.have.property('updateTime');\r",
              "pm.expect(target[0]).to.have.property('event');\r",
              "pm.expect(target[0]).to.have.property('creator');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/comments/event/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments",
            "event",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "-Пoлучение комментариев по eventId- nOk",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/comments/event/9999",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments",
            "event",
            "9999"
          ]
        }
      },
      "response": []
    },
    {
      "name": "-ПОлучение комментариев по userId",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "const target = pm.response.json();\r",
              "\r",
              "pm.test(\"Комментарии должны содержать поля: id, text, cteator, event, createTime, updateTime\", function () {\r",
              "\r",
              "pm.expect(target[0]).to.have.property('id');\r",
              "pm.expect(target[0]).to.have.property('text');\r",
              "pm.expect(target[0]).to.have.property('createTime');\r",
              "pm.expect(target[0]).to.have.property('updateTime');\r",
              "pm.expect(target[0]).to.have.property('event');\r",
              "pm.expect(target[0]).to.have.property('creator');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/comments/user/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments",
            "user",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "-ПОлучение комментариев по userId - nOk",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/comments/user/9999",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "comments",
            "user",
            "9999"
          ]
        }
      },
      "response": []
    }
  ]
}