drop  table IF EXISTS users CASCADE;
create  table IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(255) NOT NULL,
email VARCHAR(512) NOT NULL unique,
CONSTRAINT pk_user PRIMARY KEY (id)
);

drop  table IF EXISTS category CASCADE;
create  table IF NOT EXISTS category (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(255) NOT NULL,
CONSTRAINT pk_category PRIMARY KEY (id)
);

drop  table IF EXISTS locations CASCADE;
create table IF NOT EXISTS locations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
lat REAL NOT NULL,
lon REAL NOT NULL
);

drop  table IF EXISTS events CASCADE;
create table IF NOT EXISTS events (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
annotation varchar (500) not null,
category_id BIGINT not null,
confirmed_requests BIGINT not null,
event_date TIMESTAMP not null,
initiator_id BIGINT not null,
paid boolean not null,
title varchar (100) not null,
published_on TIMESTAMP,
created_on TIMESTAMP not null,
location_id BIGINT not null,
description VARCHAR(1000) NOT NULL,
participant_limit INTEGER NOT NULL,
request_moderation boolean not null,
state VARCHAR(50) NOT NULL,
FOREIGN KEY (location_id) REFERENCES locations (id),
FOREIGN KEY (category_id) REFERENCES category (id),
FOREIGN KEY (initiator_id) REFERENCES users (id)
);

drop  table IF EXISTS requests CASCADE;
create table IF NOT EXISTS requests (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
created TIMESTAMP NOT NULL,
status VARCHAR(20) NOT NULL,
event_id BIGINT NOT NULL,
requester_id BIGINT NOT NULL,
FOREIGN KEY (event_id) REFERENCES events (id),
FOREIGN KEY (requester_id) REFERENCES users (id)
);

drop  table IF EXISTS compilations CASCADE;
create table IF NOT EXISTS compilations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
pinned BOOLEAN NOT NULL,
title VARCHAR(50) NOT NULL
);

drop  table IF EXISTS compilations_and_events CASCADE;
create table IF NOT EXISTS compilations_and_events (
compilation_id BIGINT REFERENCES compilations (id) ON delete CASCADE,
event_id BIGINT REFERENCES events (id) ON delete CASCADE
);